# Note: This is a composite GitHub Actions, it should do all env setup, caching an so on, so other pipelines can just compose their own stuff on top of that.
# Docs: https://docs.github.com/en/actions/creating-actions/creating-a-composite-action

name: Setup
description: |
  Shared configuration for setting up The Guild's usual environent. It sets up node, detects defined "packageManager", enables corepack and installs with the specified package manager.

inputs:
  node-version:
    description: Node.js version to use.
    required: false
    default: lts
  node-version-file:
    description: File containing the version to use.
    required: false
  working-directory:
    description: Working directory.
    required: false
    default: .

runs:
  using: composite
  steps:
    - name: cancel concurrent runs
      uses: styfle/cancel-workflow-action@0.12.1
      continue-on-error: true
      with:
        access_token: ${{ github.token }}
    - name: detect package manager
      id: pkgmngr
      uses: actions/github-script@v7
      with:
        result-encoding: string
        script: |
          const pkgPath = '${{ inputs.working-directory }}/package.json';
          const { packageManager } = require(pkgPath);
          const [name] = String(packageManager).split('@');
          if (!name) {
            return core.setFailed(`"packageManager" not defined in "${pkgPath}". Please choose a package manager with "corepack use <your favourite manager>".`);
          }
          console.log(name);
          return name;
    - name: enable corepack
      shell: bash
      run: corepack enable
    - name: set up node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        node-version-file: ${{ inputs.node-version-file }}
        cache: ${{ steps.pkgmngr.outputs.result }}
    - name: install
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: >
        ${{ steps.pkgmngr.outputs.result }} install
        ${{ steps.pkgmngr.outputs.result == 'pnpm' && '--frozen-lockfile' || '' }}
        ${{ steps.pkgmngr.outputs.result == 'yarn' && '--immutable' || '' }}
